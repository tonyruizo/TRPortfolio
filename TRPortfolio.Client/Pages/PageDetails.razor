@page "/projects/{ProjectId}"
@using TRPortfolio.Client.Components
@inject NavigationManager Navigation
@inject HttpClient Http

<PageTitle>Tonyruizo.me - Projects - @_project?.Title</PageTitle>

@if (_project == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">

        <PageHeading Heading="Project Details"/>

        <div class="row">

            <div class="col-lg-6 col-md-12 pt-3">
                <div class="project-gif-container">
                    <video autoplay muted loop playsinline>
                        <source src="@_project.WebmDesktop" type="video/webm">
                        @* Fallback: For browsers that do not support webm *@
                        <source src="@_project.Mp4Desktop" type="video/mp4">
                    </video>
                </div>
                <em>Desktop View</em>
            </div>

            <div class="col-lg-6 col-md-12 pt-3">
                <div class="project-gif-container">
                    <video autoplay muted loop playsinline>
                        <source src="@_project.WebmMobile" type="video/webm">
                        @* Fallback: For browsers that do not support webm *@
                        <source src="@_project.Mp4Mobile" type="video/mp4">
                    </video>
                </div>
                <em>Mobile View</em>
            </div>

        </div>

        @* Description *@
        <div class="row pt-5">
            <div class="col-lg-6 col-md-12">
                <h2>@_project.Title</h2>
                <p>@_project.Description</p>
            </div>
            <div class="col-lg-6 col-md-12">
                <p><strong>Tools:</strong> @_project.ProjectTools</p>
                <div class="project-links pt-3">
                    @if (_project.RepoLink == "Private-repo")
                    {
                        <button class="btn-second disabled"
                                title="This repository is private and cannot be accessed">
                            Private Repo <i class="bi bi-ban"></i>
                        </button>
                    }
                    else
                    {
                        <a href="@_project.RepoLink" target="_blank">
                            <button class="btn-second" title="View the repository at GitHub">
                                Repo Link <i class="bi bi-github"></i>
                            </button>
                        </a>
                    }

                    <a href="@_project.ProjectLink" class="mx-1" target="_blank">
                        <button class="btn-main" title="View the project in action">View Live <i
                                class="bi bi-globe"></i></button>
                    </a>
                </div>
            </div>
        </div>

        <BackButton Link="/projects"/>

    </div>

    @code {
        [Parameter] public string ProjectId { get; set; } = string.Empty;

        private Project? _project;
        private List<Project>? _allProjects;

        protected override async Task OnInitializedAsync()
        {
            // Fetch data from a JSON projects file
            _allProjects = await Http.GetFromJsonAsync<List<Project>>("data/projects.json");

            if (_allProjects != null)
            {
                _project = _allProjects.FirstOrDefault(p => p.Slug == ProjectId.ToLower());

                if (_project == null)
                {
                    Navigation.NavigateTo("/projects"); // Redirect if project is not found
                }
            }
        }

        public class Project
        {
            public string Slug { get; set; } = string.Empty;
            public string Title { get; set; } = "Project Title";
            public string WebmDesktop { get; set; } = string.Empty;
            public string WebmMobile { get; set; } = string.Empty;
            public string Mp4Desktop { get; set; } = string.Empty;
            public string Mp4Mobile { get; set; } = string.Empty;
            public string Description { get; set; } = string.Empty;
            public string ProjectTools { get; set; } = string.Empty;
            public string ProjectLink { get; set; } = string.Empty;
            public string RepoLink { get; set; } = string.Empty;
        }

    }

}